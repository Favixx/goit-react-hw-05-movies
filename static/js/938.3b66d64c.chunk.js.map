{"version":3,"file":"static/js/938.3b66d64c.chunk.js","mappings":"qPAgBA,EAZyB,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAChC,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAAgCC,KAD3BD,EAIhB,ECaD,EArBqB,SAAC,GAAmB,IAAjBG,EAAgB,EAAhBA,UACpB,OACI,eAAIC,UAAU,QAAd,SACKD,EAAUE,KAAI,SAAAC,GAAE,OACb,SAAC,EAAD,CAEIN,OAAQM,EAAGC,GACXN,MAAOK,EAAGE,gBAFLF,EAAGC,GAFC,KAS5B,E,SCmBD,EA7Ba,WACT,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEWC,EAAAA,EAAAA,MAFX,OAENC,EAFM,OAGZN,EAAUM,GAHE,gDAKZJ,EAAS,EAAD,IALI,yDAAH,qDASjBE,GACH,GAAE,IAECH,GACO,qCAAaA,EAAMM,YAI1B,4BACI,eAAId,UAAU,gBAAd,6BACA,SAAC,EAAD,CAAcD,UAAWO,MAGpC,C,+LC7BKS,EAAU,mCAEVC,EAAMC,EAAAA,EAAAA,OAAa,CACrBC,QAAS,iCAGAN,EAAiB,mCAAG,6GAEFI,EAAIG,IAAI,sBAAuB,CAClDC,OAAQ,CACJC,QAASN,KAJQ,cAEnBF,EAFmB,yBAOlBA,EAASS,KAAKC,SAPI,sCASnB,IAAIC,MAAM,mCATS,yDAAH,qDAajBC,EAAY,mCAAG,WAAOC,GAAP,gGAEGV,EAAIG,IAAI,gBAAiB,CAC5CC,OAAQ,CACJC,QAASN,EACTW,MAAAA,KALY,cAEdb,EAFc,yBAQbA,EAASS,KAAKC,SARD,sCAUd,IAAIC,MAAM,2BAVI,yDAAH,sDAcZG,EAAe,mCAAG,WAAOC,GAAP,gGAEAZ,EAAIG,IAAJ,iBAAkBS,GAAW,CAChDR,OAAQ,CACJC,QAASN,KAJM,cAEjBF,EAFiB,yBAOhBA,EAASS,MAPO,sCASjB,IAAIE,MAAM,iCATO,yDAAH,sDAafK,EAAe,mCAAG,WAAOD,GAAP,gGAEAZ,EAAIG,IAAJ,iBAAkBS,EAAlB,YAAqC,CACxDR,OAAQ,CACJC,QAASN,KAJM,cAEjBF,EAFiB,yBAOhBA,EAASS,KAAKQ,MAPE,sCASjB,IAAIN,MAAM,iCATO,yDAAH,sDAafO,EAAe,mCAAG,WAAOH,GAAP,gGAEAZ,EAAIG,IAAJ,iBAAkBS,EAAlB,YAAqC,CACxDR,OAAQ,CACJC,QAASN,EACTiB,KAAM,EACNC,SAAU,WANK,cAEjBpB,EAFiB,yBAShBA,EAASS,KAAKC,SATE,sCAWjB,IAAIC,MAAM,iCAXO,yDAAH,qD","sources":["components/ListTrendingItem/ListTrendingItem.jsx","components/ListTrending/ListTrending.jsx","pages/Home.jsx","service/api.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ListTrendingItem = ({ itemId, title }) => {\n    return (\n        <li key={itemId}>\n            <Link to={`/movies/${itemId}`}>{title}</Link>\n        </li>\n    );\n};\nListTrendingItem.propTypes = {\n    itemId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default ListTrendingItem;","import ListTrendingItem from \"components/ListTrendingItem/ListTrendingItem\";\nimport PropTypes from \"prop-types\";\nconst ListTrending = ({ apiMovies }) => {\n    return (\n        <ul className=\"mx-3 \">\n            {apiMovies.map(el => (\n                <ListTrendingItem\n                    key={el.id}\n                    itemId={el.id}\n                    title={el.original_title}\n                />\n            ))}\n        </ul>\n    );\n};\nListTrending.propTypes = {\n    apiMovies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};\nexport default ListTrending;","import ListTrending from 'components/ListTrending/ListTrending';\nimport React, { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'service/api';\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const response = await getTrendingMovies();\n                setMovies(response);\n            } catch (error) {\n                setError(error);\n            }\n        };\n\n        fetchMovies();\n    }, []);\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n\n    return (\n        <div>\n            <h2 className='mx-3 text-3xl'>Trending today</h2>\n            <ListTrending apiMovies={movies} />\n        </div>\n    );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '856de92b49e100d8b592c0927a143e42';\n\nconst api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await api.get('/trending/movie/day', {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n        return response.data.results;\n    } catch (error) {\n        throw new Error('Failed to fetch trending movies');\n    }\n};\n\nexport const searchMovies = async (query) => {\n    try {\n        const response = await api.get('/search/movie', {\n            params: {\n                api_key: API_KEY,\n                query,\n            },\n        });\n        return response.data.results;\n    } catch (error) {\n        throw new Error('Failed to search movies');\n    }\n};\n\nexport const getMovieDetails = async (movieId) => {\n    try {\n        const response = await api.get(`/movie/${movieId}`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        throw new Error('Failed to fetch movie details');\n    }\n};\n\nexport const getMovieCredits = async (movieId) => {\n    try {\n        const response = await api.get(`/movie/${movieId}/credits`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n        return response.data.cast;\n    } catch (error) {\n        throw new Error('Failed to fetch movie credits');\n    }\n};\n\nexport const getMovieReviews = async (movieId) => {\n    try {\n        const response = await api.get(`/movie/${movieId}/reviews`, {\n            params: {\n                api_key: API_KEY,\n                page: 1,\n                language: 'en-US'\n            },\n        });\n        return response.data.results;\n    } catch (error) {\n        throw new Error('Failed to fetch movie reviews');\n    }\n};\n"],"names":["itemId","title","to","apiMovies","className","map","el","id","original_title","useState","movies","setMovies","error","setError","useEffect","fetchMovies","getTrendingMovies","response","message","API_KEY","api","axios","baseURL","get","params","api_key","data","results","Error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","page","language"],"sourceRoot":""}