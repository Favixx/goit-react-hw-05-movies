{"version":3,"file":"static/js/186.430a6d34.chunk.js","mappings":"yNAkCA,UA9BgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,uCAA0CP,IAF/C,OAEZQ,EAFY,OAGlBJ,EAAWI,EAASC,KAAKC,SAHP,gDAKlBC,QAAQC,IAAR,MALkB,yDAAH,qDASvBN,GACH,GAAE,CAACN,KAGA,4BACI,oCACCG,EAAQU,KAAI,SAACC,GAAD,OACT,4BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFLF,EAAOG,GADR,MAQxB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const fetchMovieReviews = async () => {\n            try {\n                const response = await axios.get(`/movies/get-movie-reviews?id=${movieId}`);\n                setReviews(response.data.results);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        fetchMovieReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            <h1>Reviews</h1>\n            {reviews.map((review) => (\n                <div key={review.id}>\n                    <h3>{review.author}</h3>\n                    <p>{review.content}</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Reviews;"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","axios","response","data","results","console","log","map","review","author","content","id"],"sourceRoot":""}